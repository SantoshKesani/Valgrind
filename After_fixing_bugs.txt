Valgrind outputs after fixing bugs:

Running command, valgrind ./app/shell-app, we get

==6351== Memcheck, a memory error detector
==6351== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6351== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6351== Command: ./app/shell-app
==6351== 
Averaged sensor reading: 10
DONE
==6351== 
==6351== HEAP SUMMARY:
==6351==     in use at exit: 0 bytes in 0 blocks
==6351==   total heap usage: 7 allocs, 7 frees, 74,974 bytes allocated
==6351== 
==6351== All heap blocks were freed -- no leaks are possible
==6351== 
==6351== For counts of detected and suppressed errors, rerun with: -v
==6351== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Running command, valgrind --tool=helgrind ./app/shell-app, we get

==6370== Helgrind, a thread error detector
==6370== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==6370== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6370== Command: ./app/shell-app
==6370== 
Averaged sensor reading: 10
DONE
==6370== 
==6370== For counts of detected and suppressed errors, rerun with: -v
==6370== Use --history-level=approx or =none to gain increased speed, at
==6370== the cost of reduced accuracy of conflicting-access information
==6370== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Finally, running command valgrind --leak-check=full ./app/shell-app, we get

==6373== Memcheck, a memory error detector
==6373== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6373== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6373== Command: ./app/shell-app
==6373== 
Averaged sensor reading: 10
DONE
==6373== 
==6373== HEAP SUMMARY:
==6373==     in use at exit: 0 bytes in 0 blocks
==6373==   total heap usage: 7 allocs, 7 frees, 74,974 bytes allocated
==6373== 
==6373== All heap blocks were freed -- no leaks are possible
==6373== 
==6373== For counts of detected and suppressed errors, rerun with: -v
==6373== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

